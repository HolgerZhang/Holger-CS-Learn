//
// Created by Holger on 2021/9/15.
//

#include <iterator>

#include "fa.h"

#ifndef LEXER_HOLGER_LEXER_DFA_H_
#define LEXER_HOLGER_LEXER_DFA_H_

namespace lexer {

/**
 * @brief DFA, generated by NFA and DFA
 */
class DFA : public lexer::FA {
  friend class NFA;
 public:
  using TranMap = std::map<lexer::State,
                           std::map<properties::TokenType, lexer::State>>;
  DFA() : lexer::FA() {}
  explicit DFA(std::vector<std::string> &data) { create(data); }
  DFA minimize();
 private:
  std::vector<StateSet> hopcroft();
  TranMap state_transition_map();
};

}
#endif //LEXER_HOLGER_LEXER_DFA_H_
